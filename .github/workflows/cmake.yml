name: Build
on:
  push:
    branches:
      - master
      - develop
      - 'feature/**'
      - 'bugfix/**'
  # FIXME
  # pull_request:
  #  branches:
  #    - 'feature/**'
  #    - 'bugfix/**'

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "GCC Shared",
            cmake_build_shared_libs: ON,
          }
          - {
            name: "GCC Static",
            cmake_build_shared_libs: OFF,
          }
        cmake_build_type: [Debug, Release]
    name: "Ubuntu ${{ matrix.config.name }} ${{ matrix.cmake_build_type }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install dependencies
        run: sudo apt-get install -y wget unzip build-essential cmake gcc libassimp-dev libvulkan-dev libunwind-dev libx11-xcb-dev spirv-tools glslang-tools

      - name: Configure CMake
        run: |
          cmake -H. -Bbuild \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DBUILD_SHARED_LIBS=${{ matrix.config.cmake_build_shared_libs }} \
            -DREAPER_GIT_HOOKS_AUTO_UPDATE=OFF \
            -DREAPER_RUN_CLANG_TIDY=OFF

      - name: Build
        run: cmake --build build

      - name: Test
        run: ctest --test-dir build --output-on-failure

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10

  build_windows:
    runs-on: windows-latest
    env:
      reaper_vulkan_version: "1.2.131.1"
      reaper_vulkan_sdk_path: "$GITHUB_WORKSPACE/../vulkan_sdk/"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "MSVC Static",
            cmake_generator: "Visual Studio 16 2019",
            cmake_build_shared_libs: OFF,
          }
        cmake_arch: [x64]
        cmake_build_type: [Release]
    name: "Windows ${{ matrix.config.name }} ${{ matrix.cmake_arch }} ${{ matrix.cmake_build_type }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          curl -LS -o vulkansdk.exe `
            https://sdk.lunarg.com/sdk/download/${{ env.reaper_vulkan_version }}/windows/VulkanSDK-${{ env.reaper_vulkan_version }}-Installer.exe?Human=true
          7z x vulkansdk.exe -o"${{ env.reaper_vulkan_sdk_path }}"

      - name: Configure CMake
        run: |
          $env:Path += ";${{ env.reaper_vulkan_sdk_path }};${{ env.reaper_vulkan_sdk_path }}\Bin;"
          cmake .\ -Bbuild `
            -G "${{ matrix.config.cmake_generator }}" `
            -A "${{ matrix.cmake_arch }}" `
            -DBUILD_SHARED_LIBS=${{ matrix.config.cmake_build_shared_libs }} `
            -DREAPER_GIT_HOOKS_AUTO_UPDATE=OFF `
            -DREAPER_RUN_CLANG_TIDY=OFF

      - name: Build
        run: cmake --build build --config ${{ matrix.cmake_build_type }}

      - name: Test
        run: ctest --test-dir build --output-on-failure
